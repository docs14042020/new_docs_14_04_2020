it is a disturbed database management system designed to handle a high volume of structued data servers.
Data structures used in Cassandra are more specified than data structures used in relational databases. 
Cassandra data structures are faster than relational database structures.
NoSQL databases are increasingly used in Big Data and real-time web applications. 
NoSQL databases are sometimes called Not Only SQL i.e. they may support SQL-like query language.

its features: 
1. Massively Scalable Architecture.
2. Masterless Architecture: data canbe read on any node.
3. Linee scale performance: as the no of nodes increase performances increases.
4. No single point of failure: cassandra repilicates the data on different nodes that ensures no single of failure.
5. Failed can easilybe easily recoved and removed.
6. cassandra can compress the data upto 80% without any overhead.


Use cases/Application: 

1. Messaging.
2. IOT.
3. product catalogs and retail apps.
4. Social media analytics and recommendation engine.


Components of Cassandra:

Cassendra Architecture: 
  Cluster: Collection of many data centers.
        Data Center:  A collection of nodes are called data centers.
	Node: A node is the place where the data stored.

  Commit log: 
     Every operation is written to commit log. commit log used for crash recovery.
  Mem-table: 
     after data written in commit log, data is written mem-table this is temporary.
  SSTable
     when Mem-table reaches a certain threshold, data is flushed to an SSTable disk file.

Data Replication: 
   some times the link canbe down at any point of data proces, a solution is required to provide a databackup,so cassandra replicates for assuring no single point of failure.
   for this it has two types factors included 1. where to place the replica is determined by the relica stratery 
					      2. while the total no of nodes placed on diferent nodes is determined by the replication factor.
						 replica factor means there is one single copy of data while 3 replica factors means 3 copiesof data on 3 different nodes.
						for ensuring there is no single point of FAILURE the repilication FACTOR must be 3.


Write operation: the coordinatior sends a write a request of replicas. if all the replicas are up they will recive a request regardless of their consistency level.
                 Consistency level: how many no of nodes of respond back with success acknowledgment. the node respond back with the successful acknowledgemnt if the data is written successfully on the commit log and mem table.

   the writer operation procedure: 
		when a reques is comes it will go to commit log,commit log write log file and then that will go the mem-table, mem-table stores data temporary when it is full data will be flushed into the SS table.

Read Operation: there are 3 types of read requestes that coordinator sends to replicas.
		1. Direct request
		2. Digest Request
		3. Read repair request
	
	first the coordinator sends data to one of the replicas, then the coordinator sends the digest request to the number of replicas specified by the consistency level and checks whether the request is an updated data.
  	then the coordinator sends the data to all replicas if any node given out of data value, a background read repair request will update data.

Cassandra Data Model: 
    In cassandra, write are not expensives. Cassandra doesnot support joins,group by OR clause aggregation.
	Maximum the number of writes: IN cassandra writes are so very cheap, it optimized for high write performance.
	Mazimum Data Duplication: Disl space is not more expensive then the memory and cpu. as cassandra disturbed database so data dupilication provides instant data avaliability.
 Create a table playlist: 
       ( 
		SongId int,
	 	SongName text,
		Year int,	
		Singer text,
		Primary key(SongId, Songname)
	   );
	
	here songid is the partition key and songname is the clustering column
	data will be clustred on the basis of songname. only one partition iwllbe created with the songId.
		(
        SongId int,
        SongName text,
        Year int,
        Singer text,
        Primary key((SongId, Year), SongName)
		);
		SongId and year are the partition key, and song name is the clustering column.

	Model your data in cassandra: 
		(
        Student rollno int primary key,
        Student_name text,
        Course_name text,
		);
	Create table student_course
		(
		 Student_rollno int,
		 Student_name text,
		 Course_name text,
		);
		
	i can retrieve all the students for a particular course by following quary.
		select * from Studnet_course where Course_name='Course_name';
		
	i want to search all the student students and also search all the courses that a particular student is studying.
	
	select * from student_course where student_rollno=rollno
	
How to create a keyspace: 
	A keyspace is an object that holds the column families. Keyspace holds column families, indexes, user defined types, data center awareness, strategy used in keyspace, replication factor, etc. 
	
	command 'Create Keyspace' is used to create keyspace.
	  Create keyspace KeyspaceName with replication ={'class':strategy name, 
													   'repilication_factor': No of replication on different nodes};
	Various components cassandra Keyspace
	1. Simple strategy : when you have one data center
	2. Network Topology Strategy: it is used when you have more then one data center.
	3. Replication Factor: is the no of replicas dat placed on the different nodes.
	
	Example: 
	create keyspace with replication= {'class:'simplestratery','replication_factor': 3};
	Alter Keyspace: 
	command: Alter Keyspace
	
	Alter Keyspace KeyspaceName with replication={'class':'Strategyname','replication_factor': No of replication on different ondes}
													with DURABLE_WRITES=true/false
	Keyspace Name: it is cannot be altred in cassandra
	Strategy Name: Strategy name canbe altrted by spacifiting new replication factor.
	Replication factor: Replicationfactor canbe altrted by specifying new replication factor.
	Durable_write: by default it is true, if it is set false then there will be no commit log will be written.
	
	Alter Keyspace University with replication={'class': 'NetworktopologyStrategy', 'Datacenter1': 1};
	
	Drop/ Deelete Keyspace: 
	Syntax: Drop keyspace KeyspaceName
	
	Drop keyspace University
	there is no difference between drop keyspace and delete keyspace.
	
	Cassandra Table : Create, Alter, Drop & Truncate.
	
	Create a table: 
					Create table KeyspaceName.TableName 
					( 
					ColumnName DataType,
					ColumnName DataType,
					Columnname DataType,
					
					
					Primary key(ColumnName)
					) with PropertyName=PropertyValue;
					
			Primary key: 
						1. Single primary key  : Primary key(ColumnName)
						2. compound primary key: primary key(ColumnName1,ColumnName2,...)
												 Primary Key((ColumnName1,ColumnName2),ColumnName3...))
					
			Example of Create table: 
						Create table University.Student
						(
						RollNo int,
						Name text,
						dept text,
						primary Key(RollNo)
						);
	Alter database: 
					Alter table KeyspaceName.TableName 
					Alter ColumnName TYPE ColumnDatatype|
					Add ColumnName ColumnDatatype
					Drop ColumnName 
					Rename ColumnName to NewColumnName 
					With PropertyName=PropertyValue
	Drop table: 	
					Drop Table KeyspaceName.TableName
					
	Truncate Table: 
					Truncate KeyspaceName.TableName
					
	Insert Data: 
				Insert into KeyspaceName.TableName
				(ColumnName1, ColumnName2, ColumnName3 . . . .)
				 values (Column1Value, Column2Value, Column3Value . . . .)
				
				Insert into University.Student(RollNo,Name,dept,Semester) values(2,'Michael','CS', 2);
				
				
	Update Data: 
				Update KeyspaceName.TableName 
				Set ColumnName1=new Column1Value,
				    ColumnName2=new Column2Value,
				    ColumnName3=new Column3Value,    
				Where ColumnName=ColumnValue

				Update University.Student
					set name='My Name'
					where rollno=1;
				after this the student name wilbe update to My name
	
	Delete Data: 
				Delete from KeyspaceName.Tablename 
				 Where ColumnName1=ColumnValue
				
				The above syntax will delete one or more rows depend upon data filtration in where clause. 
			
				Delete ColumnNames from KeyspaceName.TableName
					Where Columnname1=ColumnValue
					
				the above syntax will delete some columns from the table.
				
	Create index create an index on the column specified by user.
	
	Create index IndexName on keyspaceName.Tablename(ColumnName);
	
	create index DeptIndex on University.Student(dept);
	select * from Univerity.Student Where dept='CSE';

	Drop index IF EXITS KeyspaceName.IndexName;
	Drop index IF EXITS University.DeptIndex;
	
Cassandra Data Types:
	
	Boolean 		True/False
	Float			32-bit floating point
	Doble			64-bit flaoting point
	Inet			32 bit signed interget
	List			Collection of elements
	Map			Json style collection of elements
	set 			collection of elements
	text			UTF-8 encoded strings
	timestamp		Id generated with data plus time
	
	Cassandra provices functionality by which data canbe automatically expired.
	During data insertion you have to spicify 'ttl' value in seconds.
	when the data expired it is marked as tombstone.
	
	insert into University.Student(rollno,name,dept,semester) values(3, 'ashok','CE',7) using ttl 100;


Cassandra Collection:
	

	cassandra collection cannot store data more then 64KB. if you store more then 64KB data then the remaining data will be lost.
	
	Create table University.Teacher
	(
	id int,
	Name text,
	Email set<text>,
	Primary key(id)
	);

	insert into University.Teacher(id,name,email) values(1, 'ashok',{'ashok@gmail.com','text@gmail.com'});

     Cassandra Map: 
	The map is a collection type that is used to store the value pairs. as its name implies that it maps one thing to another.
	if you want to save course name with its prerequisite course name, map collection can be used.
	
	insert into Univeristy>course(id,prereq) values(1,{'DataScience':'Database', 'NuralNetwork':'AI'});

